Protokoll – 04-Services-und-Domain-Logik
=======================================

Eintrag 1
- Datum/Uhrzeit: [bitte ausfüllen]
- Ort/Ordner: Überarbeitung/04-Services-und-Domain-Logik
- Änderung: Initiales Protokoll angelegt; Serviceschnitt festgehalten.
- Begründung/Ziel: Logik entkoppeln, testbar machen, Duplikate entfernen.
- Auswirkungen/Backwards-Compat: Routen rufen Services; Legacy bleibt übergangsweise bestehen.
- Tests/Validierung: Unit-Tests für Services (Start mit dice/field/session).
- Nächste Schritte: Services-Skelette implementieren; Routen minimal umbauen.
- Genehmigung des Users: [bitte ausfüllen]
- Commit/Push (nur User): [bitte ausfüllen]

Eintrag 2
- Datum/Uhrzeit: 2025-10-14 09:10 (ungefähr)
- Ort/Ordner: Überarbeitung/04-Services-und-Domain-Logik
- Änderung (Was):
  - Service `app/services/event_service.py` hinzugefügt mit `create_event(...)` (garantiert JSON für `data_json`).
  - `roll_dice_action_admin_only` in `app/main/routes.py` auf `create_event(...)` umgestellt.
- Begründung/Ziel (Warum):
  - Einheitliche Event-Erzeugung, keine `eval`-Abhängigkeit mehr für neue Events.
- Test-Anleitung (Wie testen):
  - Admin-Dashboard: für ein Team würfeln.
  - Danach: `curl -s http://localhost:5001/api/v1/status/board | jq` → `data.last_dice` gefüllt, keine Fehler im Log.
- Testergebnisse (vom User):
  - last_dice korrekt gefüllt; keine Tracebacks; zusätzlich trat ein `special_field_player_swap` auf und wurde korrekt angezeigt.
- Auswirkungen/Backwards-Compat:
  - Bestehende Events bleiben lesbar; neue Events sind JSON.
- Nächste Schritte:
  - Weitere Event-Erzeugungen schrittweise auf den Service umstellen.
- Genehmigung des Users: ja
- Commit/Push (nur User): [vom User nach Push ausfüllen]
- Status: Abgeschlossen

Eintrag 3
- Datum/Uhrzeit: 2025-10-14 11:05 (ungefähr)
- Ort/Ordner: Überarbeitung/04-Services-und-Domain-Logik
- Änderung (Was):
  - `app/services/dice_service.py` neu: `admin_roll_for_team(active_session, team)` kapselt Würfel-/Bewegungs-/Spezialfeld- und Dice-Event-Logik.
  - `roll_dice_action_admin_only` ruft nun den Service auf (kleiner Refactor, Verhalten unverändert), Turn-/Phasenlogik bleibt im Route-Handler.
- Begründung/Ziel (Warum):
  - Schrittweise Entkopplung der Geschäftslogik von Routen, bessere Testbarkeit und Wiederverwendung.
- Test-Anleitung (Wie testen):
  - Einmal im Admin-UI würfeln; danach `curl -s http://localhost:5001/api/v1/status/board | jq`.
  - Erwartung: `last_dice` gefüllt, Positionsänderung wie zuvor, keine Tracebacks.
- Testergebnisse (vom User): erfolgreich (`last_dice` gefüllt, keine Tracebacks)
- Auswirkungen/Backwards-Compat: Keine – äußeres Verhalten identisch.
- Nächste Schritte: Session-/Turnlogik in `session_service` auslagern (separat), dann Route weiter verschlanken.
- Genehmigung des Users: ja
- Commit/Push (nur User): [vom User auszuführen]
- Status: Abgeschlossen
