Protokoll – 05-Events-und-Echtzeit
==================================

Eintrag 1
- Datum/Uhrzeit: [bitte ausfüllen]
- Ort/Ordner: Überarbeitung/05-Events-und-Echtzeit
- Änderung: Initiales Protokoll angelegt; Event-Factory/Stream-Konsolidierung geplant.
- Begründung/Ziel: Einheitliche Events, weniger Frontend-Sonderlogik.
- Auswirkungen/Backwards-Compat: Alte Eventformen werden migriert/adaptert.
- Tests/Validierung: Stream-Mock, Event-Schema-Validierung.
- Nächste Schritte: Event-Factory entwerfen; SSE-Endpoint v1 vorbereiten.
- Genehmigung des Users: [bitte ausfüllen]
- Commit/Push (nur User): [bitte ausfüllen]

Eintrag 2
- Datum/Uhrzeit: 2025-10-14 09:15 (ungefähr)
- Ort/Ordner: Überarbeitung/05-Events-und-Echtzeit
- Änderung (Was):
  - `special_fields.handle_player_swap` stellt die Erstellung beider Swap-Events auf `event_service.create_event` um.
- Begründung/Ziel (Warum):
  - Einheitliche Event-Erzeugung auch für Spezialfelder, strikt JSON, weniger Duplikation.
- Test-Anleitung (Wie testen):
  - Würfeln bis Spieler-Tausch ausgelöst wird; danach `curl -s http://localhost:5001/api/v1/status/board | jq`.
  - Erwartung: `data.last_special.type == "special_field_player_swap"`, keine Tracebacks.
- Testergebnisse (vom User): erfolgreich (player_swap wurde angezeigt; keine Fehler im Log)
- Auswirkungen/Backwards-Compat: Keine Änderung am äußeren Verhalten/Schema.
- Nächste Schritte: Weitere Spezialfeld-Events sukzessive migrieren (catapult/barrier), dann eval-Fallbacks entfernen.
- Genehmigung des Users: ja
- Commit/Push (nur User): [vom User auszuführen]
- Status: Abgeschlossen

Eintrag 3
- Datum/Uhrzeit: 2025-10-14 09:20 (ungefähr)
- Ort/Ordner: Überarbeitung/05-Events-und-Echtzeit
- Änderung (Was):
  - `special_fields.handle_catapult_forward` nutzt `event_service.create_event` für Event-Erzeugung.
- Begründung/Ziel (Warum):
  - Fortsetzung der Vereinheitlichung: Spezialfeld-Events werden konsistent und sicher (JSON) erzeugt.
- Test-Anleitung (Wie testen):
  - Spielen/würfeln bis „Katapult vorwärts“ ausgelöst wird (ein Team landet auf einem entsprechenden Feld, z. B. 15/30/45/60 o. ä.).
  - Danach: `curl -s http://localhost:5001/api/v1/status/board | jq`
  - Erwartung: `data.last_special.type == "special_field_catapult_forward"`, keine Tracebacks im Log.
- Testergebnisse (vom User): erfolgreich (special_field_catapult_forward angezeigt; keine Fehler im Log)
- Auswirkungen/Backwards-Compat: Keine Änderung am äußeren Verhalten/Schema.
- Nächste Schritte: `catapult_backward` und `barrier_*` Events auf Service umstellen (jeweils in kleinen Schritten).
- Genehmigung des Users: ja
- Commit/Push (nur User): [vom User auszuführen]
- Status: Abgeschlossen

Eintrag 4
- Datum/Uhrzeit: 2025-10-14 09:30 (ungefähr)
- Ort/Ordner: Überarbeitung/05-Events-und-Echtzeit
- Änderung (Was):
  - `special_fields.handle_catapult_backward` nutzt `event_service.create_event` für Event-Erzeugung.
- Begründung/Ziel (Warum):
  - Vereinheitlichung der Spezialfeld-Events (Service, JSON), weniger Duplikation.
- Test-Anleitung (Wie testen):
  - Spielen/würfeln bis „Katapult rückwärts“ ausgelöst wird (z. B. 13/26/39/52/65 je nach Konfig).
  - Direkt danach: `curl -s http://localhost:5001/api/v1/status/board | jq`
  - Erwartung: `data.last_special.type == "special_field_catapult_backward"`, keine Tracebacks im Log.
- Testergebnisse (vom User): erfolgreich (special_field_catapult_backward angezeigt; keine Fehler im Log)
- Auswirkungen/Backwards-Compat: Keine Änderung am äußeren Verhalten/Schema.
- Nächste Schritte: barrier_* (set/released/blocked) Events migrieren.
- Genehmigung des Users: ja
- Commit/Push (nur User): [vom User auszuführen]
- Status: Abgeschlossen

Eintrag 5
- Datum/Uhrzeit: 2025-10-14 10:35 (ungefähr)
- Ort/Ordner: Überarbeitung/05-Events-und-Echtzeit
- Änderung (Was):
  - `special_fields.handle_barrier_field` (barrier_set) nutzt `event_service.create_event` für Event-Erzeugung.
- Begründung/Ziel (Warum):
  - Vereinheitlichung der Event-Erzeugung (Service, JSON), Vorbereitung zum Entfernen aller eval-Fallbacks.
- Test-Anleitung (Wie testen):
  - Spielen/würfeln bis „Sperren-Feld“ ausgelöst wird (Team landet auf Barrier-Position; siehe `/api/v1/fields/positions` → `barrier`).
  - Direkt danach: `curl -s http://localhost:5001/api/v1/status/board | jq`
  - Erwartung: `data.last_special.type == "special_field_barrier_set"`, keine Tracebacks im Log.
- Testergebnisse (vom User): erfolgreich (special_field_barrier_set angezeigt; keine Fehler im Log)
- Auswirkungen/Backwards-Compat: Keine Änderung am äußeren Verhalten/Schema.
- Nächste Schritte: barrier_released / barrier_blocked migrieren (jeweils separat, klein), dann eval-Fallbacks abbauen.
- Genehmigung des Users: ja
- Commit/Push (nur User): [vom User auszuführen]
- Status: Abgeschlossen
